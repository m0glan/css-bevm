/* light theme colors */

$white200: #f7f8f8;
$blue500: #007bc1;
$lightBlue500: #269af4;
$red500: #ca3c3d;
$black500: #424e54;
$gray500: #727e84;

/* dark theme colors */

$black900: #1d2529;
$blue200: #80bde0;
$lightBlue200: #80c4f9;
$red200: #e59e9e;
$black50: #e8eaea;
$black200: #a1a7aa;
$black300: #7b8387;

/* themes */

$themes: (
  default: (
    bg: $white200,
    primary: $blue500,
    secondary: $lightBlue500,
    error: $red500,
    disabledOrHint: rgba($black500, 0.3),
    primaryText: $black500,
    secondaryText: $gray500,
    buttonText: $white200,
  ),
  dark: (
    bg: $black900,
    primary: $blue200,
    secondary: $lightBlue200,
    error: $red200,
    disabledOrHint: rgba($black300, 0.36),
    primaryText: $black50,
    secondaryText: $black200,
    buttonText: $black900,
  ),
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

/* theme color keys */

$bg: 'bg';
$primary: 'primary';
$secondary: 'secondary';
$error: 'error';
$danger: 'danger';
$disabledOrHint: 'disabledOrHint';
$primaryText: 'primaryText';
$secondaryText: 'secondaryText';
$buttonText: 'buttonText';

@function getThemeValue($key) {
  @return map-get($theme-map, $key);
}